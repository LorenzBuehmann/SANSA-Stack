# spark configuration
sansa.spark.master=local[*]
sansa.spark.serializer=org.apache.spark.serializer.KryoSerializer
sansa.spark.executor.memory=15g
sansa.spark.driver.memory=15g
sansa.spark.driver.maxResultSize=15g
sansa.spark.app.name=SANSA_Clustering

# clusterig profile
sansa.clustering.profile=results/profile.txt

# pic clustering configuration
sansa.clustering.pic.result=results/pic_clusters.json
sansa.clustering.pic.matrix=results/pic_matrix.json
sansa.clustering.pic.number_clusters=10
sansa.clustering.pic.iterations=5

# ont hot km clustering configuration
sansa.clustering.km.onehot.result=results/oneHot_kmeans_clusters.json
sansa.clustering.km.onehot.matrix=results/oneHotMatrix.json
sansa.clustering.km.onehot.number_clusters=10
sansa.clustering.km.onehot.iterations=5

# mds km clustering configuration
sansa.clustering.km.mds.result=results/mds_kmeans_clusters.json
sansa.clustering.km.mds.matrix=results/mds_coordinates.json
sansa.clustering.km.mds.dimension=2
sansa.clustering.km.mds.number_clusters=10
sansa.clustering.km.mds.iterations=5

# word2vec km clustering configuration
sansa.clustering.km.word2vec.result=results/word2vec_kmeans_clusters.json
sansa.clustering.km.word2vec.matrix=results/word2Vec.json
sansa.clustering.km.word2vec.number_clusters=10
sansa.clustering.km.word2vec.iterations=5

# dataset configuration
#sansa.data.input=data/merged_tomtom_yelp/
#sansa.data.input=data/tomtom_pois_austria_v0.3.nt
sansa.data.input=src/main/resources/Cluster/input.nt
sansa.data.termValueUri=http://example.org/def#termValue
sansa.data.termPrefix=http://example.org/id/term/
sansa.data.typePOI=http://example.org/def#POI
sansa.data.coordinatesPredicate=http://www.opengis.net/ont/geosparql#asWKT
sansa.data.categoryPOI=http://example.org/def#category
sansa.data.poiPrefix=http://example.org/id/poi/


# sansa and yelp file merge
sansa.merge.input=src/main/resources/Cluster/input.nt
#yelp.sansa.merged_file=data/tomtom_yelp.nt 
yelp.data.input=src/main/resources/Cluster/categories.nt
yelp.data.categoryPOI=http://example.org/hasYelpCategory
yelp.data.rating=http://example.org/hasRating
